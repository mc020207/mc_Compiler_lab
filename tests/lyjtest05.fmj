// quick sort
public int main() {
    int[] nums = {1, 3, 5, 7, 9, 2, 4, 6, 8, 10, 13, 12, 11, 0};
    class QS qs;
    qs = new QS();
    qs.sort(nums);
    return nums[6]; // 6
}

public class QS {
    public int partition(int[] a, int lo, int hi) { // [lo, hi]
        int i;
        int j;
        int tmp;
        int p;
        i = lo;
        j = lo;
        p = a[hi];
        while (j <= hi) {
            if (a[j] <= p) {
                tmp = a[i];
                a[i] = a[j];
                a[j] = tmp;
                i = i + 1;
            }
            j = j + 1;
        }
        return i - 1;
    }

    public int sort_recur(int[] a, int lo, int hi) {
        int p;
        if (lo >= hi) {
            return 0;
        }
        p = this.partition(a, lo, hi);
        this.sort_recur(a, lo, p - 1);
        this.sort_recur(a, p + 1, hi);
    }

    public int sort(int[] a) {
        this.sort_recur(a, 0, length(a) - 1);
    }
}