// union find set
public int main() {
    class UF uf;
    uf = new UF();
    uf.init(10);
    uf.merge(1,2); // (1,2) -> 1
    uf.merge(2,3); // (1,2,3) -> 1
    uf.merge(6,5); // (6,5) -> 6
    uf.merge(7,8); // (7,8) -> 7
    uf.merge(5,7); // (5,6,7,8) -> 6
    return uf.find(1) * uf.find(8); // 1 * 6 = 6
}

public class UF {
    int[] fa;
    int[] rk;

    public int init(int n) {
        int i = 0;
        this.fa = new int[n];
        this.rk = new int[n];
        while (i < n) {
            this.fa[i] = i;
            this.rk[i] = 1;
            i = i + 1;
        }
    }

    public int find(int x) {
        if (this.fa[x] == x) {
            return x;
        } else {
            return this.find(this.fa[x]);
        }
    }
    
    public int merge(int x, int y) {
        int fx;
        int fy;
        fx = this.find(x);
        fy = this.find(y);
        if (this.rk[fx] < this.rk[fy]) {
            this.fa[fx] = fy;
        } else {
            this.fa[fy] = fx;
            if (this.rk[fx] == this.rk[fy]) {
                this.rk[fx] = this.rk[fx] + 1;
            }
        }
    }
}
