[define i64 @main() #0 {; d: s: ]  (0): 1 
[         L7:; d: s: ]  (1): 2 
[%t100 = add i64 2, 0; d: t100; s: ]  (2): 3 
[%t101 = add i64 1, 0; d: t101; s: ]  (3): 4 
[%t102 = add i64 1, 0; d: t102; s: ]  (4): 5 
[br label %L0; d: s: ]  (5): 6 
[         L0:; d: s: ]  (6): 7 
[%%t104 = icmp slt i64 %%t100, %%t101; d: t104; s: t100, t101]  (7): 8 
[br i1 %t104, label %L3, label %L4; d: s: t104]  (8): 9 19 
[         L4:; d: s: ]  (9): 10 
[%t103 = add i64 0, 0; d: t103; s: ]  (10): 11 
[br label %L5; d: s: ]  (11): 12 
[         L5:; d: s: ]  (12): 13 
[%t107 = icmp ne i64 %t103, 0; d: t107; s: t103]  (13): 14 
[br i1 %t107, label %L2, label %L1; d: s: t107]  (14): 15 22 
[         L1:; d: s: ]  (15): 16 
[%t101 = add i64 3, 0; d: t101; s: ]  (16): 17 
[%t102 = add i64 4, 0; d: t102; s: ]  (17): 18 
[   ret i64 0; d: s: ]  (18): 19 
[         L3:; d: s: ]  (19): 20 
[%t103 = add i64 1, 0; d: t103; s: ]  (20): 21 
[br label %L5; d: s: ]  (21): 12 
[         L2:; d: s: ]  (22): 23 
[%t102 = add i64 %t100, 1; d: t102; s: t100]  (23): 24 
[br label %L0; d: s: ]  (24): 6 
[         L6:; d: s: ]  (25): 26 
[  ret i64 -1; d: s: ]  (26): 27 
[           }; d: s: ]  (27): 
------Interference Liveness---------


Number of iterations=25

----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=
use=
In=
Out=
----------------------
 (2): 3 
def=100, 
use=
In=
Out=100, 
----------------------
 (3): 4 
def=101, 
use=
In=100, 
Out=100, 101, 
----------------------
 (4): 5 
def=102, 
use=
In=101, 100, 
Out=101, 100, 
----------------------
 (5): 6 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (6): 7 
def=
use=
In=101, 100, 
Out=101, 100, 
----------------------
 (7): 8 
def=104, 
use=100, 101, 
In=100, 101, 
Out=104, 100, 101, 
----------------------
 (8): 9 19 
def=
use=104, 
In=101, 100, 104, 
Out=101, 100, 
----------------------
 (9): 10 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (10): 11 
def=103, 
use=
In=101, 100, 
Out=103, 101, 100, 
----------------------
 (11): 12 
def=
use=
In=100, 101, 103, 
Out=100, 101, 103, 
----------------------
 (12): 13 
def=
use=
In=103, 101, 100, 
Out=103, 101, 100, 
----------------------
 (13): 14 
def=107, 
use=103, 
In=100, 101, 103, 
Out=107, 100, 101, 
----------------------
 (14): 15 22 
def=
use=107, 
In=101, 100, 107, 
Out=101, 100, 
----------------------
 (15): 16 
def=
use=
In=100, 
Out=100, 
----------------------
 (16): 17 
def=101, 
use=
In=100, 
Out=101, 100, 
----------------------
 (17): 18 
def=102, 
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (18): 19 
def=
use=
In=101, 100, 
Out=101, 100, 
----------------------
 (19): 20 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (20): 21 
def=103, 
use=
In=101, 100, 
Out=103, 101, 100, 
----------------------
 (21): 12 
def=
use=
In=100, 101, 103, 
Out=100, 101, 103, 
----------------------
 (22): 23 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (23): 24 
def=102, 
use=100, 
In=101, 100, 
Out=101, 100, 
----------------------
 (24): 6 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (25): 26 
def=
use=
In=
Out=
----------------------
 (26): 27 
def=
use=
In=
Out=
----------------------
 (27): 
def=
use=
In=
Out=
DF(L0) -> L0
DF(L4) -> L5
DF(L5) -> L0
DF(L3) -> L5
DF(L2) -> L0
L0 101
L0 100
L4 100
L4 101
L5 103
L5 101
L5 100
L1 100
L3 100
L3 101
L2 100
L2 101
define i64 @main() #0 {
L7:
%t100 = add i64 2, 0
%t101 = add i64 1, 0
%t102 = add i64 1, 0
br label %L0
L0:
%%t104 = icmp slt i64 %%t100, %%t101
br i1 %t104, label %L3, label %L4
L4:
%t103 = add i64 0, 0
br label %L5
L5:
%t107 = icmp ne i64 %t103, 0
br i1 %t107, label %L2, label %L1
L1:
%t101 = add i64 3, 0
%t102 = add i64 4, 0
ret i64 0
L3:
%t103 = add i64 1, 0
br label %L5
L2:
%t102 = add i64 %t100, 1
br label %L0
L6:
ret i64 -1
}

declare ptr @malloc(i64)
