define i64 @main() #0 {
L67:
%t133 = add i64 0, 0
%t134 = add i64 10000, 0
%t135 = add i64 10000, 0
%t136 = add i64 10, 0
%t137 = add i64 10, 0
%t138 = add i64 1, 0
%t139 = add i64 50000, 0
%t140 = add i64 0, 0
%t141 = add i64 0, 0
%t142 = add i64 0, 0
%t143 = add i64 0, 0
%t152 = add i64 10, 0
%t162 = add i64 %t152, 1
%t161 = mul i64 %t162, 8
%t160 = call ptr @malloc(i64 %t161)
%t151 = ptrtoint ptr %t160 to i64
%t164 = inttoptr i64 %t151 to ptr
store i64 %t152, ptr %t164
%t282 = add i64 %t151, 8
%t168 = inttoptr i64 %t282 to ptr
%t283 = call i64 @getarray(ptr %t168)
call void @putint(i64 %t283)
%t173 = add i64 10, 0
call void @putch(i64 %t173)
%t174 = call ptr @malloc(i64 64)
%t150 = ptrtoint ptr %t174 to i64
%t176 = add i64 %t150, 56
%t175 = inttoptr i64 %t176 to ptr
%t178 = ptrtoint ptr @c1$solve to i64
store i64 %t178, ptr %t175
%t180 = add i64 %t150, 48
%t179 = inttoptr i64 %t180 to ptr
%t182 = ptrtoint ptr @c1$min to i64
store i64 %t182, ptr %t179
%t184 = add i64 %t150, 40
%t183 = inttoptr i64 %t184 to ptr
%t186 = ptrtoint ptr @c1$init to i64
store i64 %t186, ptr %t183
%t188 = add i64 %t150, 32
%t187 = inttoptr i64 %t188 to ptr
store i64 0, ptr %t187
%t191 = add i64 %t150, 24
%t190 = inttoptr i64 %t191 to ptr
store i64 0, ptr %t190
%t194 = add i64 %t150, 16
%t193 = inttoptr i64 %t194 to ptr
store i64 0, ptr %t193
%t197 = add i64 %t150, 8
%t196 = inttoptr i64 %t197 to ptr
store i64 0, ptr %t196
%t200 = add i64 %t150, 0
%t199 = inttoptr i64 %t200 to ptr
store i64 0, ptr %t199
%t284 = add i64 %t150, 0
%t203 = add i64 %t284, 32
%t202 = inttoptr i64 %t203 to ptr
store i64 10010, ptr %t202
%t149 = add i64 %t284, 0
%t209 = add i64 %t149, 40
%t208 = inttoptr i64 %t209 to ptr
%t207 = load i64, ptr %t208
%t206 = inttoptr i64 %t207 to ptr
%t205 = call i64 %t206(i64 %t149)
call void @starttime()
%t285=call i64 @getint()
br label %L60
L60:
%t286=phi i64 [%t292,%L62],[%t285,%L67]
%t213 = icmp sgt i64 %t286, 0
br i1 %t213, label %L63, label %L64
L64:
%t144 = add i64 0, 0
br label %L65
L65:
%t287=phi i64 [%t293,%L63],[%t144,%L64]
%t215 = icmp ne i64 %t287, 0
br i1 %t215, label %L62, label %L61
L61:
call void @stoptime()
ret i64 %t140
L63:
%t293 = add i64 1, 0
br label %L65
L62:
%t288=call i64 @getint()
%t289=call i64 @getint()
%t290=call i64 @getint()
%t291=call i64 @getint()
%t148 = add i64 %t284, 0
%t222 = add i64 %t148, 56
%t221 = inttoptr i64 %t222 to ptr
%t220 = load i64, ptr %t221
%t219 = inttoptr i64 %t220 to ptr
%t227 = sdiv i64 %t288, %t138
%t224 = sdiv i64 %t289, %t138
%t153 = call i64 %t219(i64 %t148,i64 %t227,i64 %t224)
%t155 = add i64 %t153, 0
%t147 = add i64 %t284, 0
%t234 = add i64 %t147, 56
%t233 = inttoptr i64 %t234 to ptr
%t232 = load i64, ptr %t233
%t231 = inttoptr i64 %t232 to ptr
%t241 = sub i64 %t290, 1
%t239 = sdiv i64 %t241, %t138
%t236 = sdiv i64 %t289, %t138
%t154 = call i64 %t231(i64 %t147,i64 %t239,i64 %t236)
%t157 = sub i64 %t155, %t154
%t146 = add i64 %t284, 0
%t249 = add i64 %t146, 56
%t248 = inttoptr i64 %t249 to ptr
%t247 = load i64, ptr %t248
%t246 = inttoptr i64 %t247 to ptr
%t255 = sdiv i64 %t288, %t138
%t253 = sub i64 %t291, 1
%t251 = sdiv i64 %t253, %t138
%t156 = call i64 %t246(i64 %t146,i64 %t255,i64 %t251)
%t159 = sub i64 %t157, %t156
%t145 = add i64 %t284, 0
%t264 = add i64 %t145, 56
%t263 = inttoptr i64 %t264 to ptr
%t262 = load i64, ptr %t263
%t261 = inttoptr i64 %t262 to ptr
%t272 = sub i64 %t290, 1
%t270 = sdiv i64 %t272, %t138
%t268 = sub i64 %t291, 1
%t266 = sdiv i64 %t268, %t138
%t158 = call i64 %t261(i64 %t145,i64 %t270,i64 %t266)
%t276 = add i64 %t159, %t158
call void @putint(i64 %t276)
%t280 = add i64 10, 0
call void @putch(i64 %t280)
%t292 = sub i64 %t286, 1
br label %L60
L66:
ret i64 -1
}

define i64 @c1$solve(i64 %t122, i64 %t127, i64 %t128) #0 {
L70:
%t123 = add i64 0, 0
%t124 = add i64 0, 0
%t125 = add i64 1, 0
%t126 = add i64 0, 0
%t298 = mul i64 %t127, %t128
%t297 = icmp eq i64 %t298, 0
br i1 %t297, label %L57, label %L58
L58:
%t132 = add i64 0, 0
br label %L59
L59:
%t363=phi i64 [%t374,%L57],[%t132,%L58]
%t301 = icmp ne i64 %t363, 0
br i1 %t301, label %L54, label %L55
L55:
br label %L56
L56:
%t364=phi i64 [%t124,%L71],[%t124,%L55]
%t365 = add i64 1, 0
%t366 = add i64 %t365, 0
br label %L48
L48:
%t367=phi i64 [%t372,%L50],[%t365,%L56]
%t368=phi i64 [%t371,%L50],[%t364,%L56]
%t296 = add i64 %t367, 0
%t130 = add i64 %t122, 0
%t306 = add i64 %t130, 48
%t305 = inttoptr i64 %t306 to ptr
%t304 = load i64, ptr %t305
%t303 = inttoptr i64 %t304 to ptr
%t295 = call i64 %t303(i64 %t130,i64 %t127,i64 %t128)
%t311 = icmp sle i64 %t296, %t295
br i1 %t311, label %L51, label %L52
L52:
%t129 = add i64 0, 0
br label %L53
L53:
%t369=phi i64 [%t373,%L51],[%t129,%L52]
%t314 = icmp ne i64 %t369, 0
br i1 %t314, label %L50, label %L49
L49:
ret i64 %t368
L57:
%t374 = add i64 1, 0
br label %L59
L54:
ret i64 0
L71:
br label %L56
L51:
%t373 = add i64 1, 0
br label %L53
L50:
%t131 = add i64 %t122, 0
%t320 = add i64 %t131, 48
%t319 = inttoptr i64 %t320 to ptr
%t318 = load i64, ptr %t319
%t317 = inttoptr i64 %t318 to ptr
%t328 = sdiv i64 %t127, %t367
%t327 = sdiv i64 %t127, %t328
%t323 = sdiv i64 %t128, %t367
%t322 = sdiv i64 %t128, %t323
%t294 = call i64 %t317(i64 %t131,i64 %t327,i64 %t322)
%t370 = add i64 %t294, 0
%t359 = add i64 %t122, 8
%t358 = inttoptr i64 %t359 to ptr
%t357 = load i64, ptr %t358
%t355 = mul i64 %t370, 8
%t354 = add i64 %t357, %t355
%t353 = inttoptr i64 %t354 to ptr
%t352 = load i64, ptr %t353
%t350 = add i64 %t122, 8
%t349 = inttoptr i64 %t350 to ptr
%t348 = load i64, ptr %t349
%t346 = sub i64 %t367, 1
%t345 = mul i64 %t346, 8
%t344 = add i64 %t348, %t345
%t343 = inttoptr i64 %t344 to ptr
%t342 = load i64, ptr %t343
%t341 = sub i64 %t352, %t342
%t338 = sdiv i64 %t127, %t367
%t337 = mul i64 %t341, %t338
%t334 = sdiv i64 %t128, %t367
%t333 = mul i64 %t337, %t334
%t371 = add i64 %t368, %t333
%t372 = add i64 %t370, 1
br label %L48
L69:
ret i64 -1
}

define i64 @c1$min(i64 %t117, i64 %t119, i64 %t120) #0 {
L74:
%t118 = add i64 0, 0
%t375 = icmp slt i64 %t119, %t120
br i1 %t375, label %L45, label %L46
L46:
%t121 = add i64 0, 0
br label %L47
L47:
%t382=phi i64 [%t383,%L45],[%t121,%L46]
%t378 = icmp ne i64 %t382, 0
br i1 %t378, label %L42, label %L43
L43:
br label %L44
L44:
ret i64 %t120
L45:
%t383 = add i64 1, 0
br label %L47
L42:
ret i64 %t119
L75:
br label %L44
L73:
ret i64 -1
}

define i64 @c1$init(i64 %t100) #0 {
L78:
%t101 = add i64 0, 0
%t102 = add i64 0, 0
%t103 = add i64 0, 0
%t386 = add i64 %t100, 0
%t390 = add i64 %t100, 32
%t389 = inttoptr i64 %t390 to ptr
%t388 = load i64, ptr %t389
%t116 = add i64 %t388, 10
%t394 = add i64 %t116, 1
%t393 = mul i64 %t394, 8
%t392 = call ptr @malloc(i64 %t393)
%t115 = ptrtoint ptr %t392 to i64
%t396 = inttoptr i64 %t115 to ptr
store i64 %t116, ptr %t396
%t399 = inttoptr i64 %t386 to ptr
%t401 = add i64 %t115, 8
store i64 %t401, ptr %t399
%t385 = add i64 %t100, 8
%t406 = add i64 %t100, 32
%t405 = inttoptr i64 %t406 to ptr
%t404 = load i64, ptr %t405
%t114 = add i64 %t404, 10
%t410 = add i64 %t114, 1
%t409 = mul i64 %t410, 8
%t408 = call ptr @malloc(i64 %t409)
%t113 = ptrtoint ptr %t408 to i64
%t412 = inttoptr i64 %t113 to ptr
store i64 %t114, ptr %t412
%t415 = inttoptr i64 %t385 to ptr
%t417 = add i64 %t113, 8
store i64 %t417, ptr %t415
%t384 = add i64 %t100, 16
%t422 = add i64 %t100, 32
%t421 = inttoptr i64 %t422 to ptr
%t420 = load i64, ptr %t421
%t112 = add i64 %t420, 10
%t426 = add i64 %t112, 1
%t425 = mul i64 %t426, 8
%t424 = call ptr @malloc(i64 %t425)
%t111 = ptrtoint ptr %t424 to i64
%t428 = inttoptr i64 %t111 to ptr
store i64 %t112, ptr %t428
%t431 = inttoptr i64 %t384 to ptr
%t433 = add i64 %t111, 8
store i64 %t433, ptr %t431
%t686 = add i64 0, 0
br label %L36
L36:
%t687=phi i64 [%t716,%L38],[%t686,%L78]
%t439 = add i64 %t100, 32
%t438 = inttoptr i64 %t439 to ptr
%t437 = load i64, ptr %t438
%t435 = icmp slt i64 %t687, %t437
br i1 %t435, label %L39, label %L40
L40:
%t110 = add i64 0, 0
br label %L41
L41:
%t688=phi i64 [%t717,%L39],[%t110,%L40]
%t441 = icmp ne i64 %t688, 0
br i1 %t441, label %L38, label %L37
L37:
%t448 = add i64 %t100, 8
%t447 = inttoptr i64 %t448 to ptr
%t446 = load i64, ptr %t447
%t445 = mul i64 1, 8
%t444 = add i64 %t446, %t445
%t443 = inttoptr i64 %t444 to ptr
store i64 1, ptr %t443
%t689 = add i64 2, 0
br label %L6
L6:
%t690=phi i64 [%t703,%L13],[%t689,%L37]
%t454 = add i64 %t100, 32
%t453 = inttoptr i64 %t454 to ptr
%t452 = load i64, ptr %t453
%t450 = icmp slt i64 %t690, %t452
br i1 %t450, label %L9, label %L10
L10:
%t105 = add i64 0, 0
br label %L11
L11:
%t691=phi i64 [%t715,%L9],[%t105,%L10]
%t456 = icmp ne i64 %t691, 0
br i1 %t456, label %L8, label %L7
L7:
%t692 = add i64 1, 0
br label %L0
L0:
%t693=phi i64 [%t695,%L2],[%t692,%L7]
%t462 = add i64 %t100, 32
%t461 = inttoptr i64 %t462 to ptr
%t460 = load i64, ptr %t461
%t458 = icmp slt i64 %t693, %t460
br i1 %t458, label %L3, label %L4
L4:
%t104 = add i64 0, 0
br label %L5
L5:
%t694=phi i64 [%t696,%L3],[%t104,%L4]
%t464 = icmp ne i64 %t694, 0
br i1 %t464, label %L2, label %L1
L1:
%t468 = add i64 10, 0
%t471 = add i64 %t100, 16
%t470 = inttoptr i64 %t471 to ptr
%t469 = load i64, ptr %t470
%t467 = inttoptr i64 %t469 to ptr
call void @putarray(i64 %t468,ptr %t467)
br label %L77
L39:
%t717 = add i64 1, 0
br label %L41
L38:
%t479 = add i64 %t100, 0
%t478 = inttoptr i64 %t479 to ptr
%t477 = load i64, ptr %t478
%t475 = mul i64 %t687, 8
%t474 = add i64 %t477, %t475
%t473 = inttoptr i64 %t474 to ptr
store i64 0, ptr %t473
%t487 = add i64 %t100, 8
%t486 = inttoptr i64 %t487 to ptr
%t485 = load i64, ptr %t486
%t483 = mul i64 %t687, 8
%t482 = add i64 %t485, %t483
%t481 = inttoptr i64 %t482 to ptr
store i64 0, ptr %t481
%t495 = add i64 %t100, 16
%t494 = inttoptr i64 %t495 to ptr
%t493 = load i64, ptr %t494
%t491 = mul i64 %t687, 8
%t490 = add i64 %t493, %t491
%t489 = inttoptr i64 %t490 to ptr
store i64 0, ptr %t489
%t716 = add i64 %t687, 1
br label %L36
L9:
%t715 = add i64 1, 0
br label %L11
L8:
%t506 = add i64 %t100, 0
%t505 = inttoptr i64 %t506 to ptr
%t504 = load i64, ptr %t505
%t502 = mul i64 %t690, 8
%t501 = add i64 %t504, %t502
%t500 = inttoptr i64 %t501 to ptr
%t499 = load i64, ptr %t500
%t498 = icmp eq i64 %t499, 0
br i1 %t498, label %L33, label %L34
L34:
%t109 = add i64 0, 0
br label %L35
L35:
%t697=phi i64 [%t714,%L33],[%t109,%L34]
%t508 = icmp ne i64 %t697, 0
br i1 %t508, label %L30, label %L31
L31:
br label %L32
L32:
%t698 = add i64 0, 0
br label %L12
L12:
%t699=phi i64 [%t710,%L20],[%t698,%L32]
%t700=phi i64 [%t709,%L20],[%t690,%L32]
%t514 = add i64 %t100, 24
%t513 = inttoptr i64 %t514 to ptr
%t512 = load i64, ptr %t513
%t510 = icmp slt i64 %t699, %t512
br i1 %t510, label %L15, label %L16
L16:
%t106 = add i64 0, 0
br label %L17
L17:
%t701=phi i64 [%t713,%L15],[%t106,%L16]
%t516 = icmp ne i64 %t701, 0
br i1 %t516, label %L14, label %L13
L13:
%t702=phi i64 [%t706,%L18],[%t700,%L24],[%t700,%L17]
%t703 = add i64 %t702, 1
br label %L6
L33:
%t714 = add i64 1, 0
br label %L35
L30:
%t528 = add i64 %t100, 16
%t527 = inttoptr i64 %t528 to ptr
%t526 = load i64, ptr %t527
%t524 = add i64 %t100, 24
%t523 = inttoptr i64 %t524 to ptr
%t522 = load i64, ptr %t523
%t521 = mul i64 %t522, 8
%t520 = add i64 %t526, %t521
%t519 = inttoptr i64 %t520 to ptr
store i64 %t690, ptr %t519
%t532 = add i64 %t100, 24
%t531 = inttoptr i64 %t532 to ptr
%t537 = add i64 %t100, 24
%t536 = inttoptr i64 %t537 to ptr
%t535 = load i64, ptr %t536
%t534 = add i64 %t535, 1
store i64 %t534, ptr %t531
%t545 = add i64 %t100, 8
%t544 = inttoptr i64 %t545 to ptr
%t543 = load i64, ptr %t544
%t541 = mul i64 %t690, 8
%t540 = add i64 %t543, %t541
%t539 = inttoptr i64 %t540 to ptr
%t547 = sub i64 0, 1
store i64 %t547, ptr %t539
br label %L32
L15:
%t713 = add i64 1, 0
br label %L17
L14:
%t557 = add i64 %t100, 16
%t556 = inttoptr i64 %t557 to ptr
%t555 = load i64, ptr %t556
%t553 = mul i64 %t699, 8
%t552 = add i64 %t555, %t553
%t551 = inttoptr i64 %t552 to ptr
%t550 = load i64, ptr %t551
%t549 = mul i64 %t700, %t550
%t562 = add i64 %t100, 32
%t561 = inttoptr i64 %t562 to ptr
%t560 = load i64, ptr %t561
%t548 = icmp sge i64 %t549, %t560
br i1 %t548, label %L27, label %L28
L28:
%t108 = add i64 0, 0
br label %L29
L29:
%t704=phi i64 [%t712,%L27],[%t108,%L28]
%t564 = icmp ne i64 %t704, 0
br i1 %t564, label %L24, label %L25
L25:
br label %L26
L26:
%t705=phi i64 [%t103,%L79],[%t699,%L25]
%t706=phi i64 [%t102,%L79],[%t700,%L25]
%t582 = add i64 %t100, 0
%t581 = inttoptr i64 %t582 to ptr
%t580 = load i64, ptr %t581
%t577 = add i64 %t100, 16
%t576 = inttoptr i64 %t577 to ptr
%t575 = load i64, ptr %t576
%t573 = mul i64 %t705, 8
%t572 = add i64 %t575, %t573
%t571 = inttoptr i64 %t572 to ptr
%t570 = load i64, ptr %t571
%t569 = mul i64 %t706, %t570
%t568 = mul i64 %t569, 8
%t567 = add i64 %t580, %t568
%t566 = inttoptr i64 %t567 to ptr
store i64 1, ptr %t566
%t600 = add i64 %t100, 8
%t599 = inttoptr i64 %t600 to ptr
%t598 = load i64, ptr %t599
%t595 = add i64 %t100, 16
%t594 = inttoptr i64 %t595 to ptr
%t593 = load i64, ptr %t594
%t591 = mul i64 %t705, 8
%t590 = add i64 %t593, %t591
%t589 = inttoptr i64 %t590 to ptr
%t588 = load i64, ptr %t589
%t587 = mul i64 %t706, %t588
%t586 = mul i64 %t587, 8
%t585 = add i64 %t598, %t586
%t584 = inttoptr i64 %t585 to ptr
%t610 = add i64 %t100, 8
%t609 = inttoptr i64 %t610 to ptr
%t608 = load i64, ptr %t609
%t606 = mul i64 %t706, 8
%t605 = add i64 %t608, %t606
%t604 = inttoptr i64 %t605 to ptr
%t603 = load i64, ptr %t604
%t602 = sub i64 0, %t603
store i64 %t602, ptr %t584
%t632 = add i64 %t100, 16
%t631 = inttoptr i64 %t632 to ptr
%t630 = load i64, ptr %t631
%t628 = mul i64 %t705, 8
%t627 = add i64 %t630, %t628
%t626 = inttoptr i64 %t627 to ptr
%t625 = load i64, ptr %t626
%t624 = sdiv i64 %t706, %t625
%t622 = add i64 %t100, 16
%t621 = inttoptr i64 %t622 to ptr
%t620 = load i64, ptr %t621
%t618 = mul i64 %t705, 8
%t617 = add i64 %t620, %t618
%t616 = inttoptr i64 %t617 to ptr
%t615 = load i64, ptr %t616
%t614 = mul i64 %t624, %t615
%t613 = sub i64 %t706, %t614
%t612 = icmp eq i64 %t613, 0
br i1 %t612, label %L21, label %L22
L22:
%t107 = add i64 0, 0
br label %L23
L23:
%t707=phi i64 [%t711,%L21],[%t107,%L22]
%t636 = icmp ne i64 %t707, 0
br i1 %t636, label %L18, label %L19
L19:
br label %L20
L20:
%t708=phi i64 [%t103,%L80],[%t705,%L19]
%t709=phi i64 [%t102,%L80],[%t706,%L19]
%t710 = add i64 %t708, 1
br label %L12
L27:
%t712 = add i64 1, 0
br label %L29
L24:
br label %L13
L79:
br label %L26
L21:
%t711 = add i64 1, 0
br label %L23
L18:
%t655 = add i64 %t100, 8
%t654 = inttoptr i64 %t655 to ptr
%t653 = load i64, ptr %t654
%t650 = add i64 %t100, 16
%t649 = inttoptr i64 %t650 to ptr
%t648 = load i64, ptr %t649
%t646 = mul i64 %t705, 8
%t645 = add i64 %t648, %t646
%t644 = inttoptr i64 %t645 to ptr
%t643 = load i64, ptr %t644
%t642 = mul i64 %t706, %t643
%t641 = mul i64 %t642, 8
%t640 = add i64 %t653, %t641
%t639 = inttoptr i64 %t640 to ptr
store i64 0, ptr %t639
br label %L13
L80:
br label %L20
L3:
%t696 = add i64 1, 0
br label %L5
L2:
%t663 = add i64 %t100, 8
%t662 = inttoptr i64 %t663 to ptr
%t661 = load i64, ptr %t662
%t659 = mul i64 %t693, 8
%t658 = add i64 %t661, %t659
%t657 = inttoptr i64 %t658 to ptr
%t683 = add i64 %t100, 8
%t682 = inttoptr i64 %t683 to ptr
%t681 = load i64, ptr %t682
%t679 = mul i64 %t693, 8
%t678 = add i64 %t681, %t679
%t677 = inttoptr i64 %t678 to ptr
%t676 = load i64, ptr %t677
%t674 = add i64 %t100, 8
%t673 = inttoptr i64 %t674 to ptr
%t672 = load i64, ptr %t673
%t670 = sub i64 %t693, 1
%t669 = mul i64 %t670, 8
%t668 = add i64 %t672, %t669
%t667 = inttoptr i64 %t668 to ptr
%t666 = load i64, ptr %t667
%t665 = add i64 %t676, %t666
store i64 %t665, ptr %t657
%t695 = add i64 %t693, 1
br label %L0
L77:
ret i64 -1
}

declare ptr @malloc(i64)
declare i64 @getint()
declare i64 @getch()
declare i64 @getarray(ptr)
declare void @putint(i64)
declare void @putch(i64)
declare void @putarray(i64,ptr)
declare void @starttime()
declare void @stoptime()
