define i64 @main() #0 {
L7:
%t111 = call ptr @malloc(i64 8)
%t109 = ptrtoint ptr %t111 to i64
%t113 = add i64 %t109, 0
%t112 = inttoptr i64 %t113 to ptr
%t115 = ptrtoint ptr @c2$m1 to i64
store i64 %t115, ptr %t112
%t108 = add i64 %t109, 0
%t119 = add i64 %t108, 0
%t118 = inttoptr i64 %t119 to ptr
%t117 = load i64, ptr %t118
%t116 = inttoptr i64 %t117 to ptr
%t110 = call i64 %t116(i64 %t108,i64 10)
%t107 = add i64 %t110, 0
ret i64 %t107
L6:
ret i64 -1
}

define i64 @c2$m1() #0 {
L10:
ret i64 0
L9:
ret i64 -1
}

define i64 @c1$m1() #0 {
L13:
%t126 = icmp sgt i64 %t101, i64 2
br i1 %t126, label %L3, label %L4
L4:
%t104 = add i64 0, 0
L5:
%t128 = icmp ne i64 %t104, i64 0
br i1 %t128, label %L0, label %L1
L1:
L2:
ret i64 %t101
L3:
%t104 = add i64 1, 0
br label %L5:
L0:
%t103 = add i64 %t100, 0
%t134 = add i64 %t103, 0
%t133 = inttoptr i64 %t134 to ptr
%t132 = load i64, ptr %t133
%t131 = inttoptr i64 %t132 to ptr
%t136 = sub i64 %t101, 1
%t123 = call i64 %t131(i64 %t103,i64 %t136)
%t125 = add i64 %t123, 0
%t102 = add i64 %t100, 0
%t142 = add i64 %t102, 0
%t141 = inttoptr i64 %t142 to ptr
%t140 = load i64, ptr %t141
%t139 = inttoptr i64 %t140 to ptr
%t144 = sub i64 %t101, 2
%t124 = call i64 %t139(i64 %t102,i64 %t144)
%t147 = add i64 %t125, %t124
ret i64 %t147
L14:
br label %L2:
L12:
ret i64 -1
}

declare ptr @malloc(i32)
